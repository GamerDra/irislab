$date
	Fri Jan 26 18:07:39 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module ror_tb $end
$var wire 4 ! output_bits [3:0] $end
$var reg 4 " input_bits [3:0] $end
$var reg 1 # k1 $end
$var reg 1 $ k2 $end
$scope module my_ror $end
$var wire 4 % input_bits [3:0] $end
$var wire 1 # k1 $end
$var wire 1 $ k2 $end
$var wire 4 & stage1 [3:0] $end
$var wire 4 ' output_bits [3:0] $end
$scope module mux1 $end
$var wire 1 ( a $end
$var wire 1 ) b $end
$var wire 1 # select $end
$var wire 1 * out $end
$upscope $end
$scope module mux2 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 # select $end
$var wire 1 - out $end
$upscope $end
$scope module mux3 $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 # select $end
$var wire 1 0 out $end
$upscope $end
$scope module mux4 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 # select $end
$var wire 1 3 out $end
$upscope $end
$scope module mux5 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 $ select $end
$var wire 1 6 out $end
$upscope $end
$scope module mux6 $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 $ select $end
$var wire 1 9 out $end
$upscope $end
$scope module mux7 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 $ select $end
$var wire 1 < out $end
$upscope $end
$scope module mux8 $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 $ select $end
$var wire 1 ? out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
1?
1>
0=
0<
0;
1:
19
18
07
06
05
14
03
02
01
10
1/
1.
0-
0,
0+
1*
1)
1(
b1010 '
b101 &
b101 %
1$
0#
b101 "
b1010 !
$end
#20
04
0>
15
17
08
0:
1;
1=
06
19
0<
b1010 !
b1010 '
1?
0*
1-
00
b1010 &
13
0(
0)
1+
1,
0.
0/
11
12
0$
1#
b1010 "
b1010 %
#30
16
09
1<
b101 !
b101 '
0?
1$
#40
